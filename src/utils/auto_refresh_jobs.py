from datetime import datetime
from src.utils.scheduler_instance import scheduler
from src.utils.token_db import get_all_tokens 
from src.utils.func import refresh_token_safe

def auto_refresh_tokens():
    print("üîÅ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö token ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...")
    all_tokens = get_all_tokens()
    for token in all_tokens:
        if not token.expiry:
            print(f"‚ö†Ô∏è Token {token.email} ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‚Üí ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä")
            refresh_token_safe(token.email)
        else:
            seconds_left = (token.expiry - datetime.utcnow()).total_seconds()
            if seconds_left < 600:  # ‡∏ñ‡πâ‡∏≤‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 10 ‡∏ô‡∏≤‡∏ó‡∏µ
                print(f"üîÑ Token {token.email} ‡∏à‡∏∞‡∏´‡∏°‡∏î‡πÉ‡∏ô {int(seconds_left)} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‚Üí ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä")
                refresh_token_safe(token.email)
# ‡πÄ‡∏û‡∏¥‡πà‡∏° job ‡∏•‡∏á scheduler ‡∏ï‡∏±‡∏ß‡∏Å‡∏•‡∏≤‡∏á
scheduler.add_job(auto_refresh_tokens, 'interval', minutes=15)